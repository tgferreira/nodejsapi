{
	"swagger": "2.0",
	"info": {
		"version": "1.0.0",
		"title": "TodoList Api",
		"description": "Example of NodeJs Api RESTFul with MongoDB"
	},
	"host": "localhost:3000",
	"basePath": "/",
	"tags": [
		{
			"name": "Tasks",
			"description": "Methods for handling tasks in general"
    },
    {
			"name": "Task",
			"description": "Methods to handle specific tasks"
		}
	],
	"consumes": [
		"application/json"
	],
	"produces": [
		"application/json"
	],
	"paths": {
		"/tasks": {
			"post": {
				"tags": [
					"Task"
				],
				"description": "Create new Task in system",
				"parameters": [
					{
						"name": "name",
						"in": "body",
						"description": "Task that we want to create",
						"schema": {
							"$ref": "#/definitions/Task"
						}
					}
				],
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "New Task is created",
						"schema": {
							"$ref": "#/definitions/Task"
						}
					}
				}
			},
			"get": {
				"tags": [
					"Tasks"
				],
				"summary": "Get all Tasks in system",
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Task"
						}
					}
				}
			}
		},
		"/tasks/{taskId}": {
			"parameters": [
				{
					"name": "taskId",
					"in": "path",
					"required": true,
					"description": "ID of user that we want to find",
					"type": "string"
				}
			],
			"get": {
				"tags": [
					"Task"
				],
				"summary": "Get Tasks with given ID",
				"responses": {
					"200": {
						"description": "Tasks is found",
						"schema": {
							"$ref": "#/definitions/Task"
						}
					}
				}
			},
			"delete": {
				"summary": "Delete Tasks with given ID",
				"tags": [
					"Task"
				],
				"responses": {
					"200": {
						"description": "Task is deleted",
						"schema": {
							"$ref": "#/definitions/Task"
						}
					}
				}
			},
			"put": {
				"summary": "Update Task with give ID",
				"tags": [
					"Task"
				],
				"parameters": [
					{
						"name": "taskId",
						"in": "body",
						"description": "Task with new values of properties",
						"schema": {
							"$ref": "#/definitions/Task"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Task is updated",
						"schema": {
							"$ref": "#/definitions/Task"
						}
					}
				}
			}
		}
	},
	"definitions": {
		"Task": {
			"required": [
				"name"
			],
			"properties": {
				"id": {
					"type": "string",
					"uniqueItems": true
				},
				"Created_date": {
					"type": "string"
				},
				"Status": {
          "type": "string",
          "enum": ["pending", "ongoing", "completed"]
				}
			}
		}
	}
}